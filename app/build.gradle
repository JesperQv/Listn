apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

def rootPath = rootProject.ext

android {
    compileSdkVersion rootPath.compileSdkVersion

    defaultConfig {
        applicationId "com.jesperqvarfordt.listn"
        minSdkVersion rootPath.minSdkVersion
        targetSdkVersion rootPath.targetSdkVersion
        versionCode rootPath.versionCode
        versionName rootPath.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", "Listn-$versionName")
    }

    signingConfigs {
        release {
            storeFile file(System.getenv("KEYSTORE") ?: "keystore.jks")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation project(':domain')
    implementation project(':data')
    implementation project(':device')

    implementation("com.crashlytics.sdk.android:crashlytics:$rootPath.crashlyticsVersion") {
        transitive = true
    }
    implementation "com.google.firebase:firebase-core:$rootPath.firebaseVersion"

    implementation "com.android.support:support-v4:$rootPath.supportLibraryVersion"
    implementation "com.android.support:support-v13:$rootPath.supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$rootPath.supportLibraryVersion"
    implementation "com.android.support:design:$rootPath.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootPath.supportLibraryVersion"

    implementation "com.squareup.retrofit2:retrofit:$rootPath.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootPath.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootPath.retrofitVersion"

    implementation "com.squareup.okhttp3:logging-interceptor:$rootPath.okhttpVersion"
    implementation "com.squareup.okhttp3:okhttp:$rootPath.okhttpVersion"

    implementation "io.reactivex.rxjava2:rxandroid:$rootPath.rxAndroidVersion"

    implementation "com.google.dagger:dagger:$rootPath.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootPath.daggerVersion"
    compileOnly "javax.annotation:$rootPath.javaxAnnotationVersion"

    implementation ("com.squareup.picasso:picasso:$rootPath.picassoVersion") {
        exclude module: 'exifinterface'
    }
    implementation ("jp.wasabeef:picasso-transformations:$rootPath.picassoTransformationsVersion") {
        exclude module: 'exifinterface'
    }

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    implementation "com.android.support.constraint:constraint-layout:$rootPath.constraintLayoutVersion"
    testImplementation "junit:junit:$rootPath.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootPath.testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootPath.espressoVersion"
    testImplementation "org.mockito:mockito-core:$rootPath.mockitoVersion"
}

apply plugin: 'com.google.gms.google-services'